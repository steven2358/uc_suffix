<?php

/**
 * Implementation of hook_menu().
 */
function uc_suffix_menu() {
  $items = array();

  $items['admin/store/settings/price-handlers/suffix'] = array(
    'title' => t('Price suffix settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_suffix_settings_form'),
    'access arguments' => array('configure suffix'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'uc_suffix.admin.inc',
  );

  return $items;
}


/**
 * Implementation of hook_uc_price_handler().
 *
 * Inspired by https://drupal.org/node/1291766
 */
function uc_suffix_uc_price_handler() {
	return array(
		'alter' => array(
		  'title' => t('UC suffix'),
		  'description' => t("Adds a custom suffix after the price."),
		  'callback' => 'my_price_handler',
		)
	  );
}


/**
 * Custom price handler.
 */
function my_price_handler(&$price_info, &$context, &$options) {
	$my_suffix = variable_get('uc_suffix_string', 'VAT not included');

	switch ($context['type']) {
		case 'product':
			$options['suffixes'][] = '(' . $my_suffix .')';
			break;
		case 'cart_item':
		case 'order_product':
		case 'attribute_option':
		case 'line_item':
		case 'price':
		case 'amount':
			break;
	}
}


/**
 * Implementation of hook_views_data_alter().
 */
function uc_suffix_views_data_alter(&$data) {
  foreach (array('list_price', 'cost', 'sell_price') as $field) {
    $data['uc_products'][$field]['field']['handler'] = 'uc_suffix_handler_field_price';
  }
}


/**
 * Implementation of hook_views_handlers().
 */
function uc_suffix_views_handlers() {
  return array(
    'handlers' => array(
      'uc_suffix_handler_field_price' => array(
        'parent' => 'uc_product_handler_field_price',
      ),
    ),
  );
}


function uc_suffix_init() {
  global $conf;
  // Add the "suffix string" setting as a translatable variable.
  $conf['i18n_variables'][] = 'uc_suffix_string';
}

?>
